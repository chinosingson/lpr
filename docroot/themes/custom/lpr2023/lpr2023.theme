<?php

/**
 * @file
 * Functions to support theming in the SASS Starterkit subtheme.
 */

use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_form_system_theme_settings_alter() for settings form.
 *
 * Replace Barrio setting options with subtheme ones.
 *
 * Example on how to alter theme settings form
 */
function lpr2023_form_system_theme_settings_alter(&$form, FormStateInterface $form_state) {
  $form['components']['navbar']['bootstrap_barrio_navbar_top_background']['#options'] = [
    'bg-primary' => t('Primary'),
    'bg-secondary' => t('Secondary'),
    'bg-light' => t('Light'),
    'bg-dark' => t('Dark'),
    'bg-white' => t('White'),
    'bg-transparent' => t('Transparent'),
  ];
  $form['components']['navbar']['bootstrap_barrio_navbar_background']['#options'] = [
    'bg-primary' => t('Primary'),
    'bg-secondary' => t('Secondary'),
    'bg-light' => t('Light'),
    'bg-dark' => t('Dark'),
    'bg-white' => t('White'),
    'bg-transparent' => t('Transparent'),
  ];
}

/**
 * Implements hook_theme_suggestions_HOOK_alter() for views templates.
 */
function lpr2023_theme_suggestions_views_view_fields_alter(array &$suggestions, array $variables) {
  // Get the current path.
  $current_path = \Drupal::service('path.current')->getPath();
  $current_path_alias = \Drupal::service('path_alias.manager')->getAliasByPath($current_path);

  // Check for specific paths and add theme suggestions accordingly.
  // suggestions for the News & Events page
  if ($current_path_alias == '/news-events'){
    // if ($variables['view']->id() == 'news' && $variables['view']->current_display == 'news_highlighted') {
    //   $suggestions[] = 'views_view_fields__news__news_highlighted';
    // }

    // suggestions for events displays
    if ($variables['view']->id() == 'events'){
      if ($variables['view']->current_display == 'news_events_highlighted') {
        $suggestions[] = 'views_view_fields__events__news_events_highlighted';
      }

      if ($variables['view']->current_display == 'news_events_list') {
        $suggestions[] = 'views_view_fields__events__news_events_list';
      }

    } 
  }

  // suggestions for the homepage
  if (\Drupal::service('path.matcher')->isFrontPage()) {
    if ($variables['view']->id() == 'events'){
      if ($variables['view']->current_display == 'homepage_highlighted') {
        $suggestions[] = 'views_view_fields__events__homepage_highlighted';
      }

      if ($variables['view']->current_display == 'homepage_list') {
        $suggestions[] = 'views_view_fields__events__homepage_list';
      }
    }
  }

  // suggestions for all events page
  if ($current_path_alias == '/events'){
    // suggestions for events displays
    if ($variables['view']->id() == 'events'){
      if ($variables['view']->current_display == 'all_events') {
        $suggestions[] = 'views_view_fields__events__news_events_list';
      }

    } 
  }

  // suggestions for all news page
  if ($current_path_alias == '/news'){
    // suggestions for news displays
    if ($variables['view']->id() == 'news'){
      if ($variables['view']->current_display == 'all_news') {
        $suggestions[] = 'views_view_fields__news__news_list';
      }

    } 
  }

}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */

function lpr2023_theme_suggestions_node_alter(array &$suggestions, array $variables) {
  $node = $variables['elements']['#node'];
  // use a custom template for flagship events
  if ($node->bundle() == 'event' && $node->get('field_flagship_event')->value == "1") {
    // dpm($node->get('field_flagship_event')->value);
    $view_mode = $variables['elements']['#view_mode'];
    $suggestions[] = 'node__event__flagship';
    // dpm($suggestions);
  }
}

function lpr2023_preprocess_field($variables){
  $field_name = $variables['field_name'];
  if ($field_name == 'field_event_tabs'){
    $variables['tabs_wrapper_attributes']['class'][] = 'nav-fill';
    $variables['tabs_wrapper_attributes']['class'][] = 'mb-5';
    foreach ($variables['items'] as &$item) {
      $item['body_attributes'] = $item['content']['#body_attributes'];
      $item['header_attributes'] = $item['content']['#header_attributes'];
      $item['tabs_item_attributes'] = $item['content']['#tabs_item_attributes'];

      // bootstrap 5 tab attributes
      $item['content']['#header_attributes']['data-bs-toggle'] = 'tab';
      $item['content']['#header_attributes']['data-bs-target'] = $item['content']['#header_attributes']['href'];
      $item['content']['#header_attributes']['aria-controls'] = $item['content']['#body_attributes']['id'];
      $item['content']['#header_attributes']['aria-selected'] = 'false';

      $item['tabs_item_attributes']['role'] = 'presentation';
      $item['tabs_item_attributes']['class'][] = 'flex-sm-fill';
    }
  }
}